// Copyright 2019 The Cockroach Authors.
// Copyright (c) 2022-present, Shanghai Yunxi Technology Co, Ltd. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// This software (KWDB) is licensed under Mulan PSL v2.
// You can use this software according to the terms and conditions of the Mulan PSL v2.
// You may obtain a copy of Mulan PSL v2 at:
//          http://license.coscl.org.cn/MulanPSL2
// THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
// EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
// MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
// See the Mulan PSL v2 for more details.

syntax = "proto3";
package kwbase.storage.enginepb;
option go_package = "enginepb";

import "gogoproto/gogo.proto";

// EngineType specifies type of storage engine (eg. rocksdb, pebble).
enum EngineType {
  option (gogoproto.goproto_enum_prefix) = false;
  option (gogoproto.goproto_enum_stringer) = false;

  // Denotes the default engine as the underlying storage engine type. Resolves
  // during start to the engine type last used. If left unresolved, it's treated
  // the same as EngineTypeRocksDB.
  EngineTypeDefault = 0;
  // Denotes RocksDB as the underlying storage engine type.
  EngineTypeRocksDB = 1;
  // Denotes Pebble as the underlying storage engine type.
  EngineTypePebble = 2;
  // Denotes TeePebbleRocksDB as the underlying storage engine type. Only use
  // for testing purposes.
  EngineTypeTeePebbleRocksDB = 3;
}
