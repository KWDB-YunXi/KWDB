
exec-ddl
CREATE TABLE parent (p INT PRIMARY KEY)
----

exec-ddl
CREATE TABLE child (c INT PRIMARY KEY, p INT REFERENCES parent(p))
----

exec-ddl
SHOW CREATE parent
----
TABLE parent
 ├── p int4 not null
 ├── INDEX primary
 │    └── p int4 not null
 └── REFERENCED BY CONSTRAINT fk_p_ref_parent FOREIGN KEY child (p) REFERENCES parent (p)

exec-ddl
SHOW CREATE child
----
TABLE child
 ├── c int4 not null
 ├── p int4
 ├── INDEX primary
 │    └── c int4 not null
 ├── INDEX child_auto_index_fk_p_ref_parent
 │    ├── p int4
 │    └── c int4 not null
 └── CONSTRAINT fk_p_ref_parent FOREIGN KEY child (p) REFERENCES parent (p)

exec-ddl
CREATE TABLE parent2 (p INT UNIQUE)
----

exec-ddl
CREATE TABLE child2 (c INT PRIMARY KEY, p INT REFERENCES parent2(p))
----

exec-ddl
SHOW CREATE parent2
----
TABLE parent2
 ├── p int4
 ├── rowid int not null default (unique_rowid()) [hidden]
 ├── INDEX primary
 │    └── rowid int not null default (unique_rowid()) [hidden]
 ├── INDEX parent2_p_key
 │    ├── p int4
 │    └── rowid int not null default (unique_rowid()) [hidden] (storing)
 └── REFERENCED BY CONSTRAINT fk_p_ref_parent2 FOREIGN KEY child2 (p) REFERENCES parent2 (p)

exec-ddl
SHOW CREATE child2
----
TABLE child2
 ├── c int4 not null
 ├── p int4
 ├── INDEX primary
 │    └── c int4 not null
 ├── INDEX child2_auto_index_fk_p_ref_parent2
 │    ├── p int4
 │    └── c int4 not null
 └── CONSTRAINT fk_p_ref_parent2 FOREIGN KEY child2 (p) REFERENCES parent2 (p)

exec-ddl
CREATE TABLE parent_multicol (p INT, q INT, r INT, PRIMARY KEY (p,q,r))
----

exec-ddl
CREATE TABLE child_multicol (
  p INT,
  q INT,
  r INT,
  PRIMARY KEY (p,q,r),
  CONSTRAINT fk FOREIGN KEY (p,q,r) REFERENCES parent_multicol(p,q,r)
)
----

exec-ddl
CREATE TABLE child_multicol_full (
  p INT,
  q INT,
  r INT,
  PRIMARY KEY (p,q,r),
  CONSTRAINT fk FOREIGN KEY (p,q,r) REFERENCES parent_multicol(p,q,r) MATCH FULL
)
----

exec-ddl
SHOW CREATE parent_multicol
----
TABLE parent_multicol
 ├── p int4 not null
 ├── q int4 not null
 ├── r int4 not null
 ├── INDEX primary
 │    ├── p int4 not null
 │    ├── q int4 not null
 │    └── r int4 not null
 ├── REFERENCED BY CONSTRAINT fk FOREIGN KEY child_multicol (p, q, r) REFERENCES parent_multicol (p, q, r)
 └── REFERENCED BY CONSTRAINT fk FOREIGN KEY child_multicol_full (p, q, r) REFERENCES parent_multicol (p, q, r) MATCH FULL

exec-ddl
SHOW CREATE child_multicol
----
TABLE child_multicol
 ├── p int4 not null
 ├── q int4 not null
 ├── r int4 not null
 ├── INDEX primary
 │    ├── p int4 not null
 │    ├── q int4 not null
 │    └── r int4 not null
 └── CONSTRAINT fk FOREIGN KEY child_multicol (p, q, r) REFERENCES parent_multicol (p, q, r)

exec-ddl
SHOW CREATE child_multicol_full
----
TABLE child_multicol_full
 ├── p int4 not null
 ├── q int4 not null
 ├── r int4 not null
 ├── INDEX primary
 │    ├── p int4 not null
 │    ├── q int4 not null
 │    └── r int4 not null
 └── CONSTRAINT fk FOREIGN KEY child_multicol_full (p, q, r) REFERENCES parent_multicol (p, q, r) MATCH FULL
