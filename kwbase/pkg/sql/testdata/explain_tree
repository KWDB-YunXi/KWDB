exec
CREATE TABLE t.orders (oid INT8 PRIMARY KEY, cid INT8, value DECIMAL, date DATE)
----

# In the string version, the constants are not anonymized.
plan-string
SELECT oid FROM t.orders WHERE oid = 123
----
scan                         (oid int)
      table  orders@primary
      spans  /123-/123/#

plan-tree
SELECT oid FROM t.orders WHERE oid = 123
----
name: scan
attrs:
- key: table
  value: orders@primary
- key: spans
  value: 1 span
children: []

plan-string
SELECT cid, date, value FROM t.orders
----
render                            (cid int, date date, value decimal)
 └── scan                         (cid int, value decimal, date date)
           table  orders@primary
           spans  FULL SCAN

plan-tree
SELECT cid, date, value FROM t.orders
----
name: render
attrs: []
children:
- name: scan
  attrs:
  - key: table
    value: orders@primary
  - key: spans
    value: FULL SCAN
  children: []

plan-string
SELECT cid, sum(value) FROM t.orders WHERE date > '2015-01-01' GROUP BY cid ORDER BY 1 - sum(value)
----
render                                                                                 (cid int, sum decimal)
 └── sort                                                                              (column6 decimal, cid int, sum decimal)  +column6
      │                        order        +column6
      └── render                                                                       (column6 decimal, cid int, sum decimal)
           └── group                                                                   (cid int, sum decimal)
                │              aggregate 0  cid
                │              aggregate 1  sum(value)
                │              group by     cid
                └── render                                                             (cid int, value decimal)
                     └── scan                                                          (cid int, value decimal, date date)
                               table        orders@primary
                               spans        FULL SCAN
                               filter       ((@3)[date] > ('2015-01-01')[date])[bool]

plan-tree
SELECT cid, sum(value) FROM t.orders WHERE date > '2015-01-01' GROUP BY cid ORDER BY 1 - sum(value)
----
name: render
attrs: []
children:
- name: sort
  attrs:
  - key: order
    value: +column6
  children:
  - name: render
    attrs: []
    children:
    - name: group
      attrs:
      - key: aggregate 0
        value: cid
      - key: aggregate 1
        value: sum(value)
      - key: group by
        value: cid
      children:
      - name: render
        attrs: []
        children:
        - name: scan
          attrs:
          - key: table
            value: orders@primary
          - key: spans
            value: FULL SCAN
          - key: filter
            value: date > _
          children: []

plan-string
SELECT value FROM (SELECT cid, date, value FROM t.orders)
----
scan                         (value decimal)
      table  orders@primary
      spans  FULL SCAN

plan-tree
SELECT value FROM (SELECT cid, date, value FROM t.orders)
----
name: scan
attrs:
- key: table
  value: orders@primary
- key: spans
  value: FULL SCAN
children: []

plan-string
SELECT cid, date, value FROM t.orders WHERE date IN (SELECT date FROM t.orders)
----
render                                                    (cid int, date date, value decimal)
 └── hash-join                                            (cid int, value decimal, date date, date date)
      │              type                inner
      │              equality            (date) = (date)
      │              right cols are key
      ├── scan                                            (cid int, value decimal, date date)
      │              table               orders@primary
      │              spans               FULL SCAN
      └── distinct                                        (date date)
           │         distinct on         date
           └── scan                                       (date date)
                     table               orders@primary
                     spans               FULL SCAN

plan-tree
SELECT cid, date, value FROM t.orders WHERE date IN (SELECT date FROM t.orders)
----
name: render
attrs: []
children:
- name: hash-join
  attrs:
  - key: type
    value: inner
  - key: equality
    value: (date) = (date)
  - key: right cols are key
    value: ""
  children:
  - name: scan
    attrs:
    - key: table
      value: orders@primary
    - key: spans
      value: FULL SCAN
    children: []
  - name: distinct
    attrs:
    - key: distinct on
      value: date
    children:
    - name: scan
      attrs:
      - key: table
        value: orders@primary
      - key: spans
        value: FULL SCAN
      children: []

exec
CREATE TABLE t.movies (
  id SERIAL PRIMARY KEY,
  title TEXT,
  released INT8
)
----

exec
CREATE TABLE t.actors (
  id SERIAL PRIMARY KEY,
  name TEXT
)
----

# Subquery.
plan-string
SELECT id AS movie_id, title, (SELECT name FROM t.actors WHERE name = 'Foo') FROM t.movies
----
root                                                                               (movie_id int, title string, name string)
 ├── render                                                                        (movie_id int, title string, name string)
 │    └── scan                                                                     (id int, title string)
 │                   table         movies@primary
 │                   spans         FULL SCAN
 └── subquery
      │              id            @S1
      │              original sql  (SELECT name FROM t.actors WHERE name = 'Foo')
      │              exec mode     one row
      └── max1row                                                                  (name string)
           └── scan                                                                (name string)
                     table         actors@primary
                     spans         FULL SCAN
                     filter        ((@1)[string] = ('Foo')[string])[bool]

plan-tree
SELECT id AS movie_id, title, (SELECT name FROM t.actors WHERE name = 'Foo') FROM t.movies
----
name: root
attrs: []
children:
- name: render
  attrs: []
  children:
  - name: scan
    attrs:
    - key: table
      value: movies@primary
    - key: spans
      value: FULL SCAN
    children: []
- name: subquery
  attrs:
  - key: id
    value: '@S1'
  - key: original sql
    value: (SELECT name FROM t.actors WHERE name = _)
  - key: exec mode
    value: one row
  children:
  - name: max1row
    attrs: []
    children:
    - name: scan
      attrs:
      - key: table
        value: actors@primary
      - key: spans
        value: FULL SCAN
      - key: filter
        value: name = _
      children: []
