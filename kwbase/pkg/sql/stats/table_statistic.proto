// Copyright 2019 The Cockroach Authors.
// Copyright (c) 2022-present, Shanghai Yunxi Technology Co, Ltd. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// This software (KWDB) is licensed under Mulan PSL v2.
// You can use this software according to the terms and conditions of the Mulan PSL v2.
// You may obtain a copy of Mulan PSL v2 at:
//          http://license.coscl.org.cn/MulanPSL2
// THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
// EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
// MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
// See the Mulan PSL v2 for more details.
//
// Data structures and basic infrastructure for distributed SQL APIs. See
// docs/RFCS/distributed_sql.md.
// All the concepts here are "physical plan" concepts.

syntax = "proto3";
package kwbase.sql.stats;
option go_package = "stats";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

import "sql/stats/histogram.proto";

// A TableStatisticProto object holds a statistic for a particular column or
// group of columns. It mirrors the structure of the system.table_statistics
// table. It is also used as the format in which table statistics are
// serialized in a backup.
message TableStatisticProto {
  // The ID of the table.
  uint32 table_id = 1 [(gogoproto.customname) = "TableID",
                      (gogoproto.casttype) = "gitee.com/kwbasedb/kwbase/pkg/sql/sqlbase.ID"];
  // The ID for this statistic.  It need not be globally unique,
  // but must be unique for this table.
  uint64 statistic_id = 2 [(gogoproto.customname) = "StatisticID"];
  // Optional user-defined name for the statistic.
  string name = 3;
  // The column ID(s) for which this statistic is generated.
  repeated uint32 column_ids = 4 [(gogoproto.customname) = "ColumnIDs",
                                 (gogoproto.casttype) = "gitee.com/kwbasedb/kwbase/pkg/sql/sqlbase.ColumnID"];
  // The time at which the statistic was created.
  google.protobuf.Timestamp created_at = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  // The total number of rows in the table.
  uint64 row_count = 6;
  // The estimated number of distinct values of the columns in ColumnIDs.
  uint64 distinct_count = 7;
  // The number of rows that have a NULL in any of the columns in ColumnIDs.
  uint64 null_count = 8;
  // Histogram (if available)
  HistogramData histogram_data = 9;
}
